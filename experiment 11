#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

// Function executed by each thread
void *thread_function(void *arg) {
    int thread_id = *(int *)arg;
    printf("Thread %d: Hello from thread!\n", thread_id);
    pthread_exit(NULL);
}

int main() {
    pthread_t threads[3];
    int thread_ids[3] = {0, 1, 2};
    int i;

    // Create threads
    for (i = 0; i < 3; i++) {
        if (pthread_create(&threads[i], NULL, thread_function, &thread_ids[i]) != 0) {
            perror("Failed to create thread");
            return 1;
        }
        printf("Main: Created thread %d\n", thread_ids[i]);
    }

    // Join threads (wait for them to finish)
    for (i = 0; i < 3; i++) {
        if (pthread_join(threads[i], NULL) != 0) {
            perror("Failed to join thread");
            return 1;
        }
        printf("Main: Joined thread %d\n", thread_ids[i]);
    }

    printf("Main: All threads finished.\n");
    return 0;
}
