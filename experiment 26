#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_FILENAME_LENGTH 100
#define MAX_LINE_LENGTH 256

// Function to create a new file
int createFile(const char *filename) {
    FILE *file = fopen(filename, "w");
    if (file == NULL) {
        perror("Error creating file");
        return 1;
    }
    printf("File '%s' created successfully.\n", filename);
    fclose(file);
    return 0;
}

// Function to read from a file
int readFile(const char *filename) {
    FILE *file = fopen(filename, "r");
    if (file == NULL) {
        perror("Error opening file for reading");
        return 1;
    }
    char line[MAX_LINE_LENGTH];
    printf("Contents of file '%s':\n", filename);
    while (fgets(line, sizeof(line), file) != NULL) {
        printf("%s", line);
    }
    fclose(file);
    return 0;
}

// Function to write to a file
int writeFile(const char *filename, const char *content, const char *mode) {
  FILE *file = fopen(filename, mode);
  if (file == NULL) {
    perror("Error opening file for writing");
    return 1;
  }
  fprintf(file, "%s", content);
  fclose(file);
  printf("Content written to file '%s' successfully.\n", filename);
  return 0;
}

// Function to delete a file
int deleteFile(const char *filename) {
    if (remove(filename) == 0) {
        printf("File '%s' deleted successfully.\n", filename);
        return 0;
    } else {
        perror("Error deleting file");
        return 1;
    }
}

int main() {
    char filename[MAX_FILENAME_LENGTH];
    int choice;

    while (1) {
        printf("\nFile Management Operations:\n");
        printf("1. Create File\n");
        printf("2. Read File\n");
        printf("3. Write File (Overwrite)\n");
        printf("4. Append to File\n");
        printf("5. Delete File\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // Consume the newline character

        switch (choice) {
            case 1:
                printf("Enter filename to create: ");
                fgets(filename, sizeof(filename), stdin);
                filename[strcspn(filename, "\n")] = 0; // Remove trailing newline
                createFile(filename);
                break;
            case 2:
                printf("Enter filename to read: ");
                 fgets(filename, sizeof(filename), stdin);
                 filename[strcspn(filename, "\n")] = 0;
                readFile(filename);
                break;
            case 3: {
                printf("Enter filename to write (overwrite): ");
                 fgets(filename, sizeof(filename), stdin);
                 filename[strcspn(filename, "\n")] = 0;
                char content[MAX_LINE_LENGTH];
                printf("Enter content to write: ");
                fgets(content, sizeof(content), stdin);
                writeFile(filename, content, "w");
                break;
            }
            case 4: {
                printf("Enter filename to append: ");
                 fgets(filename, sizeof(filename), stdin);
                 filename[strcspn(filename, "\n")] = 0;
                char content[MAX_LINE_LENGTH];
                printf("Enter content to append: ");
                fgets(content, sizeof(content), stdin);
                writeFile(filename, content, "a");
                break;
            }
            case 5:
                printf("Enter filename to delete: ");
                 fgets(filename, sizeof(filename), stdin);
                 filename[strcspn(filename, "\n")] = 0;
                deleteFile(filename);
                break;
            case 6:
                printf("Exiting program.\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}
